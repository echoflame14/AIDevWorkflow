{
  "filePath": "src\\getStructure.ts",
  "summary": "<summary> <purpose>The primary purpose of this code is to provide a utility for scanning a directory structure, generating a formatted tree representation, and producing a prompt for a Retrieval Augmented Generation (RAG) system. The generated prompt can be used to support development or solve issues related to the given codebase.</purpose> <key_components> - `StructureScanner` class: Responsible for scanning a directory, formatting the tree representation, and generating the prompt. - `DirectoryScanner` class (from `./utils`): Scans a directory and produces a `DirectoryNode` or `FileNode` tree structure. - `formatTree` method: Recursively formats the directory/file tree structure into a human-readable string. - `generatePrompt` method: Generates a prompt for the RAG system, including instructions for analyzing the directory structure and providing essential context files, critical code sections, and context gaps. - `scan` function (exported): Provides a simple interface to scan a directory and generate the prompt. </key_components> <dependencies> - `fs` (Node.js built-in): Used for reading and writing files. - `clipboardy` (optional): Used to copy the generated prompt to the system clipboard. </dependencies> <unique_characteristics> - Generates a structured prompt for a RAG system, including specific instructions and a formatted directory tree. - Supports token-efficient analysis by providing guidance on prioritizing essential context files and critical code sections. - Includes options for ignoring specific files and extending the default ignore patterns. - Automatically writes the generated prompt to a `paste.txt` file and copies it to the system clipboard (if `clipboardy` is available). </unique_characteristics> <methods> - `formatTree(node: DirectoryNode | FileNode, level: number = 0): string` - `generatePrompt(structure: string): string` - `scan(rootDir: string): string` </methods> <exports if any> - `scan(rootDir: string): string`: Exports a function that scans a directory and generates the prompt. </exports if any> <any other information that you think an llm looking at a summary of all files in the repo would need to know> This file is part of a larger project that likely includes other utility files, such as `DirectoryScanner` and related types defined in `./utils`. Understanding the overall context and purpose of the project would be helpful for an LLM analyzing this file. </any other information...> </summary>",
  "lastUpdated": "2025-01-31T23:05:23.687Z",
  "fileHash": "c7f66593a891432ebeec4106993d125e"
}