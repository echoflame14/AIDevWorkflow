{
  "filePath": "src\\getStructure.ts",
  "summary": "<summary> <purpose>The `getStructure.ts` file provides a utility to scan a directory and generate a formatted representation of its structure, which can be used for context in semantic search and question-answering systems.</purpose> <key_components> - `StructureScanner` class responsible for scanning a directory and formatting the output - `scan` function that takes a root directory and returns the formatted structure - `DirectoryScanner`, `DirectoryNode`, `FileNode`, and `ScannerOptions` types from the `utils` module </key_components> <dependencies> - `fs` (Node.js file system module) - `clipboardy` (optional dependency for copying the output to the clipboard) </dependencies> <unique_characteristics> - Recursively scans a directory and its subdirectories, formatting the output with indentation and file/directory symbols - Includes token counts for each file, which can be useful for understanding the complexity of different parts of the codebase - Provides a generated prompt that can be used to solicit additional context or analysis from a language model </unique_characteristics> <methods> - `formatTree(node: DirectoryNode | FileNode, level: number = 0): string` - `generatePrompt(structure: string): string` - `scan(rootDir: string): string` </methods> <exports if any> - `scan(rootDir: string): string` </exports if any> <any other information that you think an llm looking at a summary of all files in the repo would need to know> The `getStructure.ts` file is a utility that can be used to provide context and structure information to a language model for semantic search and question-answering tasks related to a codebase. It can be particularly useful when working with large or complex projects, as it gives an overview of the file structure and highlights important details like file sizes and token counts. </any other information...> </summary>",
  "lastUpdated": "2025-01-30T19:26:09.266Z",
  "fileHash": "294890d58bed43bf00d6e30887500bf2"
}