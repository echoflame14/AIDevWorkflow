{
  "filePath": "src\\getStructure.ts",
  "summary": "<summary>   <purpose>The getStructure.ts file provides a utility function to generate a structured representation of a directory tree, which can be used for various purposes, such as visualizing the project structure or generating prompts for language models.</purpose>   <key_components>     - StructureScanner class: Responsible for scanning a directory and generating a formatted string representation of the directory tree.     - scan function: An exported function that takes a root directory path and returns the formatted directory structure.     - formatTree function: A private method that recursively formats a DirectoryNode or FileNode into a string representation.     - generatePrompt function: A private method that generates a prompt string based on the formatted directory structure, which can be used for further analysis or processing.   </key_components>   <dependencies>     - fs (Node.js built-in file system module)     - DirectoryScanner, DirectoryNode, FileNode, ScannerOptions (from ./utils)   </dependencies>   <unique_characteristics>     - Provides a structured representation of a directory tree, including file metadata such as token count.     - Generates a prompt string that can be used for further analysis or processing, such as by a language model.     - Supports sorting the directory tree by type (directories first) and then by name.     - Includes an additional ignore pattern (paste.txt) that can be configured.   </unique_characteristics>   <methods>     - formatTree(node: DirectoryNode | FileNode, level: number = 0): string     - generatePrompt(structure: string): string     - scan(rootDir: string): string   </methods>   <exports if any>     - scan(rootDir: string): string   </exports if any>   <any other information that you think an llm looking at a summary of all files in the repo would need to know>     - The StructureScanner class is the main entry point for this functionality, and the scan function is the exported function that can be used to generate the directory structure.     - The output of the scan function can be used as input for further processing, such as by a language model, to provide additional context or information about the project structure.   </any other information...> </summary>",
  "lastUpdated": "2025-01-31T23:14:25.030Z",
  "fileHash": "c7f66593a891432ebeec4106993d125e"
}