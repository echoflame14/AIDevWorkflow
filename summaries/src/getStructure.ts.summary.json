{
  "filePath": "src\\getStructure.ts",
  "summary": "<summary> <purpose>The getStructure.ts file provides a utility to scan a directory structure and generate a formatted representation of the files and directories, with token counts for files. This can be used to provide an overview of a codebase before diving into specific files.</purpose> <key_components> - `StructureScanner` class   - Responsible for scanning a directory and generating a directory tree representation   - Includes methods for calculating token counts, formatting the tree, and generating an instruction prompt - `DirectoryNode` interface   - Defines the structure of a node in the directory tree, including type, name, path, and child nodes - Exported `scan` function   - Accepts a root directory path and returns an instruction prompt with the formatted directory tree </key_components> <dependencies> - `fs` (Node.js built-in file system module) - `path` (Node.js built-in path module) - `clipboardy` (optional dependency for copying the prompt to the clipboard) </dependencies> <unique_characteristics> - Utilizes a whitelist of file extensions to include in the scan - Ignores certain directories (e.g., `node_modules`, `dist`, `coverage`) by default - Provides a formatted directory tree representation with token counts for files - Generates an instruction prompt for efficient file retrieval and analysis </unique_characteristics> <methods> - `calculateTokens` - `generateInstructionPrompt` - `shouldIgnore` - `scanDirectory` - `formatTree` - `scan` </methods> <exports if any> - `scan`: a function that scans a directory and returns an instruction prompt with the formatted directory tree </exports if any> <any other information that you think an llm looking at a summary of all files in the repo would need to know> The getStructure.ts file is a utility that can be used to provide an overview of a codebase before diving into specific files. It can be particularly useful in the context of a Retrieval Augmented Generation (RAG) system, where the directory structure and file content summaries can be used to efficiently retrieve and analyze relevant information for question answering or other tasks. </any other information...> </summary>",
  "lastUpdated": "2025-01-30T19:00:58.584Z",
  "fileHash": "635145996776c7b732b3fc2b578b2d71"
}